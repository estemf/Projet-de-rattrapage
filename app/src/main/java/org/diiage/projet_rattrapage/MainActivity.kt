package org.diiage.projet_rattrapage

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.material3.Scaffold
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.navigation.compose.rememberNavController
import org.diiage.projet_rattrapage.ui.navigation.DeezerNavHost
import org.diiage.projet_rattrapage.ui.navigation.NavigationManager
import org.diiage.projet_rattrapage.ui.theme.Projet_RattrapageTheme
import timber.log.Timber
import org.koin.android.ext.android.get

/**
 * Activit√© principale de l'application Deezer Music
 * 
 * Cette activit√© applique les r√®gles du projet :
 * - Une seule Activity pour toute l'application
 * - Navigation g√©r√©e via NavigationManager centralis√©
 * - UI moderne avec Jetpack Compose
 * - Injection de d√©pendances avec Koin
 * 
 * Architecture respect√©e :
 * - Single Activity Pattern (r√®gle du projet)
 * - Composition over inheritance
 * - Dependency Injection
 * - Edge-to-edge design moderne
 * 
 * @author √âquipe DIIAGE
 * @since 1.0
 */
class MainActivity : ComponentActivity() {
    
    /**
     * NavigationManager inject√© par Koin
     * 
     * G√®re toute la navigation de l'application de mani√®re centralis√©e
     * selon les bonnes pratiques d√©finies dans les r√®gles
     */
    private val navigationManager: NavigationManager by lazy { get<NavigationManager>() }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        
        // ================================
        // CONFIGURATION DE L'INTERFACE
        // ================================
        
        // Active le design edge-to-edge moderne
        enableEdgeToEdge()
        
        // Log du d√©marrage de l'activit√©
        Timber.i("üöÄ MainActivity cr√©√©e - Application Deezer Music d√©marr√©e")
        
        // ================================
        // CONFIGURATION DE L'UI COMPOSE
        // ================================
        
        setContent {
            // Application du th√®me personnalis√© de l'application
            Projet_RattrapageTheme {
                // Configuration de l'interface principale avec navigation
                DeezerMusicApp(navigationManager = navigationManager)
            }
        }
        
        Timber.d("‚úÖ Interface Compose configur√©e avec succ√®s")
    }
    
    override fun onDestroy() {
        super.onDestroy()
        
        // ================================
        // NETTOYAGE DES RESSOURCES
        // ================================
        
        // Lib√®re les ressources du NavigationManager
        navigationManager.dispose()
        Timber.d("üßπ NavigationManager lib√©r√©")
        
        Timber.i("üëã MainActivity d√©truite")
    }
}

/**
 * Composable principal de l'application Deezer Music
 * 
 * Cette composable orchestre l'interface utilisateur compl√®te :
 * - Navigation centralis√©e
 * - Layout responsive avec Scaffold
 * - Gestion des insets syst√®me
 * 
 * @param navigationManager Manager de navigation inject√©
 */
@Composable
private fun DeezerMusicApp(
    navigationManager: NavigationManager
) {
    // ================================
    // CR√âATION DU CONTR√îLEUR DE NAVIGATION
    // ================================
    
    val navController = rememberNavController()
    
    // ================================
    // STRUCTURE PRINCIPALE DE L'APP
    // ================================
    
    Scaffold(
        modifier = Modifier.fillMaxSize()
    ) { innerPadding ->
        
        // ================================
        // NAVIGATION HOST PRINCIPAL
        // ================================
        
        DeezerNavHost(
            navController = navController,
            navigationManager = navigationManager,
            modifier = Modifier.padding(innerPadding)
        )
    }
    
    Timber.d("üé® Interface principale rendue avec succ√®s")
}